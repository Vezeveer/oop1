/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package activity.currencyconverter;

import java.text.DecimalFormat;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Vezeveer
 */
public class CurrencyConverter extends javax.swing.JFrame {

    DecimalFormat df = new DecimalFormat("#.##");
    double cad2usd = 0.83;
    double cad2inr = 60.43;
    double cad2php = 39.59;
    double usd2cad = 1.21;
    double usd2inr = 72.95;
    double usd2php = 47.80;
    double inr2usd = 0.014;
    double inr2cad = 0.017;
    double inr2php = 0.66;
    double php2usd = 0.021;
    double php2inr = 1.53;
    double php2cad = 0.025;
    
    double amount;
    double customAmount;
    /**
     * Creates new form CurrencyConverter
     */
    public CurrencyConverter() {
        initComponents();
        cbFrom.setSelectedIndex(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tfAmount = new javax.swing.JTextField();
        tfCustomExchangeRate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbFrom = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbTo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        lblAmountError = new javax.swing.JLabel();
        lblCustomRateError = new javax.swing.JLabel();
        btnConvert = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfAmountKeyReleased(evt);
            }
        });

        tfCustomExchangeRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfCustomExchangeRateKeyReleased(evt);
            }
        });

        jLabel2.setText("Enter Amount:");

        jLabel3.setText("Custom Exchange Rate:");

        cbFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canadian Dollars CAD", "United States Dollars USD", "Philippine Pesos PHP", "Indian Rupees INR" }));
        cbFrom.setSelectedIndex(1);
        cbFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFromActionPerformed(evt);
            }
        });

        jLabel4.setText("From:");

        cbTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canadian Dollars CAD", "United States Dollars USD", "Philippine Pesos PHP", "Indian Rupees INR" }));
        cbTo.setSelectedIndex(1);
        cbTo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbTo.setName(""); // NOI18N

        jLabel5.setText("To:");

        lblAmountError.setForeground(new java.awt.Color(255, 0, 102));

        lblCustomRateError.setForeground(new java.awt.Color(255, 0, 51));

        btnConvert.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnConvert.setText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        lblResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblResult.setText("---");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbFrom, 0, 180, Short.MAX_VALUE)
                    .addComponent(tfAmount)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(lblAmountError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTo, 0, 178, Short.MAX_VALUE)
                    .addComponent(tfCustomExchangeRate)
                    .addComponent(lblCustomRateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCustomExchangeRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCustomRateError, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAmountError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Currency Converter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFromActionPerformed
        // TODO add your handling code here:
        String[] usData = {"Canadian Dollars CAD", "Philippine Pesos PHP", "Indian Rupees INR"};
        String[] cadData = {"United States Dollars USD", "Philippine Pesos PHP", "Indian Rupees INR"};
        String[] phpData = {"Canadian Dollars CAD", "United States Dollars USD", "Indian Rupees INR"};
        String[] inrData = {"Canadian Dollars CAD", "United States Dollars USD", "Philippine Pesos PHP"};
        DefaultComboBoxModel usModel = new DefaultComboBoxModel(usData);
        DefaultComboBoxModel cadModel = new DefaultComboBoxModel(cadData);
        DefaultComboBoxModel phpModel = new DefaultComboBoxModel(phpData);
        DefaultComboBoxModel inrModel = new DefaultComboBoxModel(inrData);
        switch(cbFrom.getSelectedItem().toString()){
            case "United States Dollars USD":
                cbTo.setModel(usModel);
                clear();
                break;
            case "Canadian Dollars CAD":
                cbTo.setModel(cadModel);
                clear();
                break;
            case "Philippine Pesos PHP":
                cbTo.setModel(phpModel);
                clear();
                break;
            case "Indian Rupees INR":
                cbTo.setModel(inrModel);
                clear();
                break;
        }
    }//GEN-LAST:event_cbFromActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        
        if(lblAmountError.getText().equals("Invalid Input") && lblCustomRateError.getText().equals("Invalid Input"))
            return;
        
        if(!tfCustomExchangeRate.getText().isEmpty()){
            lblResult.setText("(Custom) " + df.format(amount * Double.parseDouble(tfCustomExchangeRate.getText())));
        } else {
            if(cbFrom.getSelectedItem().equals("Canadian Dollars CAD")){
                switch(cbTo.getSelectedItem().toString()){
                    case "United States Dollars USD":
                        lblResult.setText("$" + df.format(amount * cad2usd));
                        break;
                    case "Philippine Pesos PHP":
                        lblResult.setText("₱" + df.format(amount * cad2php));
                        break;
                    case "Indian Rupees INR":
                        lblResult.setText("₹" + df.format(amount * cad2inr));
                        break;
                }
            } else if(cbFrom.getSelectedItem().equals("United States Dollars USD")){
                switch(cbTo.getSelectedItem().toString()){
                    case "Canadian Dollars CAD":
                        lblResult.setText("$" + df.format(amount * usd2cad));
                        break;
                    case "Philippine Pesos PHP":
                        lblResult.setText("₱" + df.format(amount * usd2php));
                        break;
                    case "Indian Rupees INR":
                        lblResult.setText("₹" + df.format(amount * usd2inr));
                        break;
                }
            } else if(cbFrom.getSelectedItem().equals("Philippine Pesos PHP")){
                switch(cbTo.getSelectedItem().toString()){
                    case "Canadian Dollars CAD":
                        lblResult.setText("$" + df.format(amount * php2cad));
                        break;
                    case "United States Dollars USD":
                        lblResult.setText("$" + df.format(amount * php2usd));
                        break;
                    case "Indian Rupees INR":
                        lblResult.setText("₹" + df.format(amount * php2inr));
                        break;
                }
            } else if(cbFrom.getSelectedItem().equals("Indian Rupees INR")){
                switch(cbTo.getSelectedItem().toString()){
                    case "Canadian Dollars CAD":
                        lblResult.setText("$" + df.format(amount * inr2cad));
                        break;
                    case "United States Dollars USD":
                        lblResult.setText("$" + df.format(amount * inr2usd));
                        break;
                    case "Philippine Pesos PHP":
                        lblResult.setText("₱" + df.format(amount * inr2php));
                        break;
                }
            }
        }
        
    }//GEN-LAST:event_btnConvertActionPerformed

    private void tfAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAmountKeyReleased
        // TODO add your handling code here:
        lblAmountError.setText("");
        try{
            double xAmount;
            if(!tfAmount.getText().isEmpty()){
                 xAmount = Double.parseDouble(this.tfAmount.getText());
                amount = xAmount;
            } else {
                amount = 0;
            }
        }catch(Exception e){
            lblAmountError.setText("Invalid Input");
        }
        
    }//GEN-LAST:event_tfAmountKeyReleased

    private void tfCustomExchangeRateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCustomExchangeRateKeyReleased
        // TODO add your handling code here:
        lblCustomRateError.setText("");
        try{
            double xAmount;
            if(!tfCustomExchangeRate.getText().isEmpty()){
                xAmount = Double.parseDouble(this.tfCustomExchangeRate.getText());
                customAmount = xAmount;
            } else {
                customAmount = 0;
            }
        }catch(Exception e){
            if(!tfCustomExchangeRate.getText().isEmpty())
                lblCustomRateError.setText("Invalid Input");
        }
    }//GEN-LAST:event_tfCustomExchangeRateKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrencyConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvert;
    private javax.swing.JComboBox<String> cbFrom;
    private javax.swing.JComboBox<String> cbTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAmountError;
    private javax.swing.JLabel lblCustomRateError;
    private javax.swing.JLabel lblResult;
    private javax.swing.JTextField tfAmount;
    private javax.swing.JTextField tfCustomExchangeRate;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        tfAmount.setText("");
        tfCustomExchangeRate.setText("");
        lblResult.setText("---");
    }
}
